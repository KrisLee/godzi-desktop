/* --*-c++-*-- */
/**
 * Godzi
 * Copyright 2010 Pelican Mapping
 * http://pelicanmapping.com
 * http://github.com/gwaldron/godzi
 *
 * Godzi is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef GODZI_AGGLITE_TILESOURCE
#define GODZI_AGGLITE_TILESOURCE 1

#include <Godzi/Common>
#include <Godzi/Features/Geometry>
#include <osgEarthFeatures/FeatureTileSource>
#include <osgEarthFeatures/Feature>

namespace Godzi { namespace Features {

class AGGLiteRasterizerTileSource  : public osgEarth::Features::FeatureTileSource
{
public:

    AGGLiteRasterizerTileSource(const GeometryList& geomList);

    struct BuildData : public osg::Referenced {
        BuildData() : _pass(0) { }
        int _pass;
    };

    osg::Referenced* createBuildData();
    bool preProcess(osg::Image* image, osg::Referenced* buildData);
    bool renderFeaturesForStyle(
        const osgEarth::Symbology::Style* style,
        osgEarth::Features::FeatureList& features,
        osg::Referenced* buildData,
        const GeoExtent& imageExtent,
        osg::Image* image );
    bool postProcess( osg::Image* image, osg::Referenced* data );
    osg::Image* createImage( const TileKey* key, ProgressCallback* progress );

protected:
    GeometryList _geomList;
    osg::ref_ptr<osgEarth::Symbology::Style> _style;
};



}}

#endif
