/* --*-c++-*-- */
/**
 * Godzi
 * Copyright 2010 Pelican Mapping
 * http://pelicanmapping.com
 * http://github.com/gwaldron/godzi
 *
 * Godzi is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */


#ifndef GODZI_KML_FEATURE_SOURCE_OPTION
#define GODZI_KML_FEATURE_SOURCE_OPTION 1

#include <osgEarthFeatures/FeatureSource>
#include <Godzi/Common>

namespace Godzi { namespace KML {

    using namespace osgEarth;
    using namespace osgEarth::Features;

    /**
     * Configuration for the KML Feature Source.
     */
    class GODZI_EXPORT KMLFeatureSourceOptions : public FeatureSourceOptions
    {
    public:
        optional<std::string>& url() { return _url; }
        const optional<std::string>& url() const { return _url; }

    public:
        KMLFeatureSourceOptions( const ConfigOptions& conf = osgEarth::ConfigOptions() )
            : FeatureSourceOptions( conf )
        {
            setDriver("kml");
            conf.getConfig().getIfSet<std::string>( "url", _url );
        }

        Config toConfig() const {
            osgEarth::Config conf = FeatureSourceOptions::getConfig();
            conf.updateIfSet( "url", _url );
            return conf;
        }

    protected:
        optional<std::string> _url;
    };

} } // namespace Godzi::KML

#endif
