/* --*-c++-*-- */
/**
 * Godzi
 * Copyright 2010 Pelican Mapping
 * http://pelicanmapping.com
 * http://github.com/gwaldron/godzi
 *
 * Godzi is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef SERVER_MANAGEMENT_WIDGET
#define SERVER_MANAGEMENT_WIDGET 1

#include <QWidget>
#include <QToolBar>
#include <QComboBox>
#include <QTreeWidget>
#include <QTreeWidgetItem>
//#include <QTreeView>
#include <Godzi/Application>
#include <Godzi/Project>
#include <Godzi/DataSources>

class CustomDataSourceTreeItem : public QTreeWidgetItem
{
public:
	CustomDataSourceTreeItem(Godzi::DataSource* source) : _source(source), QTreeWidgetItem() {};
	CustomDataSourceTreeItem(Godzi::DataSource* source, const QStringList &strings) : _source(source), QTreeWidgetItem(strings) {};
	
	Godzi::DataSource* getSource() const { return _source.get(); };
	
private:
	osg::ref_ptr<Godzi::DataSource> _source;	
};

class ServerManagementWidget : public QWidget
{
	Q_OBJECT

	public:
		ServerManagementWidget(Godzi::Application* app);
		
	private slots:
	  void onCurrentItemChanged(QTreeWidgetItem* current, QTreeWidgetItem* previous);
	  void onTreeItemChanged(QTreeWidgetItem* item, int col);
		void addSource();
		void removeSource();
		void onProjectChanged(osg::ref_ptr<Godzi::Project> oldProject, osg::ref_ptr<Godzi::Project> newProject);
		void onDataSourceAdded(osg::ref_ptr<const Godzi::DataSource> source, int position);
		//void onDataSourceRemoved(osg::ref_ptr<const Godzi::DataSource> source);
		//void onDataSourceMoved(osg::ref_ptr<const Godzi::DataSource> source, int position);

	private:
	  osg::ref_ptr<Godzi::Application> _app;
		QAction *_addSourceAction;
		QAction *_removeSourceAction;
		QToolBar *_toolbar;
		QComboBox *_typeBox;
		QTreeWidget *_sourceTree;
		//QTreeView *_sourceView;
		
		void createActions();
		void initUi();
		QTreeWidgetItem* createDataSourceTreeItem(osg::ref_ptr<const Godzi::DataSource> source);
		void updateDataSourceTreeItem(osg::ref_ptr<const Godzi::DataSource> source, CustomDataSourceTreeItem* item);
		//int findDataSourceTreeItem(const Godzi::DataSource* source, QTreeWidgetItem** out_item = 0);
		CustomDataSourceTreeItem* findParentSourceItem(QTreeWidgetItem* item);
		void updateVisibilitiesFromTree(CustomDataSourceTreeItem* item);
		void addTMSSource();
		void addWMSSource();
		void addKMLSource();
};

#endif // SERVER_MANAGEMENT_WIDGET